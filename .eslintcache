[{"C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\index.tsx":"1","C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\App.tsx":"3","C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\Styles.ts":"4","C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\Store.ts":"5","C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\Header.tsx":"6","C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\HomePage.tsx":"7","C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\SearchPage.tsx":"8","C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\SignInPage.tsx":"9","C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\NotFoundPage.tsx":"10","C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\QuestionPage.tsx":"11","C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\AuthorizedPage.tsx":"12","C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\SignOutPage.tsx":"13","C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\Auth.tsx":"14","C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\AskPage.tsx":"15","C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\QuestionsData.ts":"16","C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\AppSettings.ts":"17","C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\QuestionList.tsx":"18","C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\Icons.tsx":"19","C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\Page.tsx":"20","C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\PageTitle.tsx":"21","C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\AnswerList.tsx":"22","C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\Field.tsx":"23","C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\Form.tsx":"24","C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\http.ts":"25","C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\Question.tsx":"26","C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\Answer.tsx":"27"},{"size":501,"mtime":1611828068573,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":2682,"mtime":1614107204627,"results":"31","hashOfConfig":"29"},{"size":999,"mtime":1613945696779,"results":"32","hashOfConfig":"29"},{"size":3492,"mtime":1612713503582,"results":"33","hashOfConfig":"29"},{"size":4174,"mtime":1613995832678,"results":"34","hashOfConfig":"29"},{"size":2331,"mtime":1614169507903,"results":"35","hashOfConfig":"29"},{"size":1154,"mtime":1612285672683,"results":"36","hashOfConfig":"29"},{"size":494,"mtime":1613944698073,"results":"37","hashOfConfig":"29"},{"size":128,"mtime":1612215618812,"results":"38","hashOfConfig":"29"},{"size":5274,"mtime":1614011651540,"results":"39","hashOfConfig":"29"},{"size":368,"mtime":1613996349398,"results":"40","hashOfConfig":"29"},{"size":650,"mtime":1613944965255,"results":"41","hashOfConfig":"29"},{"size":2653,"mtime":1613944876978,"results":"42","hashOfConfig":"29"},{"size":2384,"mtime":1613996503870,"results":"43","hashOfConfig":"29"},{"size":4731,"mtime":1614013125096,"results":"44","hashOfConfig":"29"},{"size":357,"mtime":1614250055669,"results":"45","hashOfConfig":"29"},{"size":1152,"mtime":1612096823947,"results":"46","hashOfConfig":"29"},{"size":343,"mtime":1611939545705,"results":"47","hashOfConfig":"29"},{"size":461,"mtime":1612029460512,"results":"48","hashOfConfig":"29"},{"size":202,"mtime":1612028986466,"results":"49","hashOfConfig":"29"},{"size":668,"mtime":1612282386291,"results":"50","hashOfConfig":"29"},{"size":2903,"mtime":1612466956613,"results":"51","hashOfConfig":"29"},{"size":5600,"mtime":1612731660537,"results":"52","hashOfConfig":"29"},{"size":1335,"mtime":1613926351093,"results":"53","hashOfConfig":"29"},{"size":1336,"mtime":1612217852705,"results":"54","hashOfConfig":"29"},{"size":769,"mtime":1613507782329,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"9o05ui",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\index.tsx",[],["113","114"],"C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\App.tsx",[],"C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\Styles.ts",[],"C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\Store.ts",[],"C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\Header.tsx",[],"C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\HomePage.tsx",[],"C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\SearchPage.tsx",[],"C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\SignInPage.tsx",[],"C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\NotFoundPage.tsx",[],"C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\QuestionPage.tsx",[],"C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\AuthorizedPage.tsx",[],"C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\SignOutPage.tsx",[],"C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\Auth.tsx",[],"C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\AskPage.tsx",[],"C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\QuestionsData.ts",["115","116"],"import { http } from './http';\r\nimport { getAccessToken } from './Auth';\r\n\r\nexport interface QuestionData {\r\n  questionId: number;\r\n  title: string;\r\n  content: string;\r\n  userName: string;\r\n  created: Date;\r\n  answers: AnswerData[];\r\n}\r\n\r\nexport interface AnswerData {\r\n  answerId: number;\r\n  content: string;\r\n  userName: string;\r\n  created: Date;\r\n}\r\n\r\nexport interface QuestionDataFromServer {\r\n  questionId: number;\r\n  title: string;\r\n  content: string;\r\n  userName: string;\r\n  created: string;\r\n  answers: AnswerDataFromServer[];\r\n}\r\nexport interface AnswerDataFromServer {\r\n  answerId: number;\r\n  content: string;\r\n  userName: string;\r\n  created: string;\r\n}\r\n\r\nexport const mapQuestionFromServer = (\r\n  question: QuestionDataFromServer,\r\n): QuestionData => ({\r\n  ...question,\r\n  created: new Date(question.created.substr(0, 19)),\r\n  answers: question.answers\r\n    ? question.answers.map((answer) => ({\r\n        ...answer,\r\n        created: new Date(answer.created.substr(0, 19)),\r\n      }))\r\n    : [],\r\n});\r\n\r\nconst questions: QuestionData[] = [\r\n  {\r\n    questionId: 1,\r\n    title: 'Why should I learn TypeScript?',\r\n    content:\r\n      'TypeScript seems to be getting popular so I wondered whether it is worth my time learning it? What benefits does it give over JavaScript?',\r\n    userName: 'Bob',\r\n    created: new Date(),\r\n    answers: [\r\n      {\r\n        answerId: 1,\r\n        content: 'To catch problems earlier speeding up your developments',\r\n        userName: 'Jane',\r\n        created: new Date(),\r\n      },\r\n      {\r\n        answerId: 2,\r\n        content:\r\n          'So, that you can use the JavaScript features of tomorrow, today',\r\n        userName: 'Fred',\r\n        created: new Date(),\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    questionId: 2,\r\n    title: 'Which state management tool should I use?',\r\n    content:\r\n      'There seem to be a fair few state management tools around for React - React, Unstated, ... Which one should I use?',\r\n    userName: 'Bob',\r\n    created: new Date(),\r\n    answers: [],\r\n  },\r\n];\r\n\r\nexport const getUnansweredQuestions = async (): Promise<QuestionData[]> => {\r\n  try {\r\n    const result = await http<undefined, QuestionDataFromServer[]>({\r\n      path: '/questions/unanswered',\r\n    });\r\n    if (result.parsedBody) {\r\n      return result.parsedBody.map(mapQuestionFromServer);\r\n    } else {\r\n      return [];\r\n    }\r\n  } catch (ex) {\r\n    console.error(ex);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getQuestion = async (\r\n  questionId: number,\r\n): Promise<QuestionData | null> => {\r\n  try {\r\n    const result = await http<undefined, QuestionDataFromServer>({\r\n      path: `/questions/${questionId}`,\r\n    });\r\n    if (result.ok && result.parsedBody) {\r\n      return mapQuestionFromServer(result.parsedBody);\r\n    } else {\r\n      return null;\r\n    }\r\n  } catch (ex) {\r\n    console.error(ex);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const searchQuestions = async (\r\n  criteria: string,\r\n): Promise<QuestionData[]> => {\r\n  try {\r\n    const result = await http<undefined, QuestionDataFromServer[]>({\r\n      path: `/questions?search=${criteria}`,\r\n    });\r\n    if (result.ok && result.parsedBody) {\r\n      return result.parsedBody.map(mapQuestionFromServer);\r\n    } else {\r\n      return [];\r\n    }\r\n  } catch (ex) {\r\n    console.error(ex);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport interface PostQuestionData {\r\n  title: string;\r\n  content: string;\r\n  userName: string;\r\n  created: Date;\r\n}\r\n\r\nexport const postQuestion = async (\r\n  question: PostQuestionData,\r\n): Promise<QuestionData | undefined> => {\r\n  const accessToken = await getAccessToken();\r\n  try {\r\n    const result = await http<PostQuestionData, QuestionDataFromServer>({\r\n      path: '/questions',\r\n      method: 'post',\r\n      body: question,\r\n      accessToken,\r\n    });\r\n    if (result.ok && result.parsedBody) {\r\n      return mapQuestionFromServer(result.parsedBody);\r\n    } else {\r\n      return undefined;\r\n    }\r\n  } catch (ex) {\r\n    console.error(ex);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport interface PostAnswerData {\r\n  questionId: number;\r\n  content: string;\r\n  userName: string;\r\n  created: Date;\r\n}\r\n\r\nexport const postAnswer = async (\r\n  answer: PostAnswerData,\r\n): Promise<AnswerData | undefined> => {\r\n  const accessToken = await getAccessToken();\r\n  try {\r\n    const result = await http<PostAnswerData, AnswerData>({\r\n      path: '/questions/answer',\r\n      method: 'post',\r\n      body: answer,\r\n      accessToken,\r\n    });\r\n    if (result.ok) {\r\n      return result.parsedBody;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  } catch (ex) {\r\n    console.error(ex);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nconst wait = (ms: number): Promise<void> => {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n};\r\n","C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\AppSettings.ts",[],"C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\QuestionList.tsx",[],"C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\Icons.tsx",[],"C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\Page.tsx",[],"C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\PageTitle.tsx",[],"C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\AnswerList.tsx",[],"C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\Field.tsx",[],"C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\Form.tsx",[],"C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\http.ts",[],"C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\Question.tsx",[],"C:\\Users\\IVON\\Desktop\\.NETReact\\New folder\\frontend\\src\\Answer.tsx",[],["117","118"],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":48,"column":7,"nodeType":"125","messageId":"126","endLine":48,"endColumn":32},{"ruleId":"123","severity":1,"message":"127","line":193,"column":7,"nodeType":"125","messageId":"126","endLine":193,"endColumn":11},{"ruleId":"119","replacedBy":"128"},{"ruleId":"121","replacedBy":"129"},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"@typescript-eslint/no-unused-vars","'questions' is assigned a value but never used.","Identifier","unusedVar","'wait' is assigned a value but never used.",["130"],["131"],"no-global-assign","no-unsafe-negation"]